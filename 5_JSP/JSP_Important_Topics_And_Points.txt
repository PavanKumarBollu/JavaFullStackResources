JSP_Important_Topics_And_Points
===============================

=> Servlet vs JSP(Java Server Pages)

 1.Inside Servlet(java code) we should not write presentation logic(no usage of println()).
 2. Inside JSP we should not write buisness logic meant for presentation logic only (no usage of java code inside jsp's).
 3. JSP program consists of only tags.
 4. JSP programs are autocompiled and autoloaded.
 5. Servlet programs are executed by "CATALINA" container vs JSP programs are executed by "JASPER" container.
 6. JSP is a technology which is built on top of Servlet Technology.



=>  Writing the code using jsp technology is so easy compared to writing the code using Servlet?

	 Ans. JSP is easy because of its abstraction from the programmer.


=> if the files are converted to the servlet what willbe the name of servlet and where it will be available

	name-> attach _jsp.java to your jsp file name.
	location of the converted servlet of the jsp is located in(01_jsp is the project Name)
		C:\Tomcat 9.0\work\Catalina\localhost\01_JSP\org\apache\jsp	
	

=> Is it possible to write init(), destroy(),service() in our jsp code?
 	Answer: No, not possible becoz these methods are final in HttpJspBase class.
 
=> Is it possible to write _jspService(requese,response) method explicitly inside JSP?
 	Answer: No, if we write inside the translated servlet there will be 
		2 _jspService() method which would lead to compile time error.

=> What is the significance of _ symbol in _jspService()?
 	Answer: It indicates this method is generated automatically by JSP engine/jasper 
		container and we cannot write it explicitly.

=>  Life Cycle of JSP (refer Image Also)
    ====================================

	1. Translation phase(.jsp -> .java)
 	2. Compilation phase(.java -> .class)
 	3. Servlet loading
 	4. Servlet Instantiation
 	5. Servlet Initialization (jspInit())
 	6. Request Processing(_jspService(request,response))
 	7. Servlet DeInstantiation(jspDestroy())

=> jsp Scripting Elements (refere Image File ) VVVIMP
=======================================================


 1. Template Text
 2. Scripting Elements
 3. Standard and custom actions
 4. Express language elements

 1. Template Text
=================
 	It contains plain text with html tags For this processing is not required 
	and it will become argument to write() inside _jspService() method.

Q>Template text will become argument to write() method where as expression value will become argument to print(), 
	what is the reason?

 	Answer: write() -> it can take only character data as a argument.
 		print()  -> It can take any type of data as an argument.

	
Scripting Elements
===================


JSP custom Tags 
refer: 20_02_2023_jsp_class_notes.pdf






















































